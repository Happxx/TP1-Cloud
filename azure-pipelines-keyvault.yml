# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master

pool: "Default"

variables:
  azureSubscription: 'Azure subscription 1'
  resourceGroupName: 'KeyVaultResourceGroup'
  location: 'EastUS'
  keyVaultName: 'TP1-KeyVault-$(Build.BuildId)'  # Utiliser un nom unique pour le KeyVault pour éviter les conflits
  secretName: 'adminPassword'

steps:
- checkout: self  # Clonage du dépôt

# Étape pour supprimer le groupe de ressources s'il existe déjà
- task: AzureCLI@2
  displayName: 'Supprimer le Groupe de Ressource existant pour le KeyVault'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $rgExists = az group exists --name $(resourceGroupName)
      if ($rgExists -eq "true") {
        az group delete --name $(resourceGroupName) --yes --no-wait
        Start-Sleep -Seconds 30  # Attendre 30 secondes la fin de la suppression
      }

- task: AzureCLI@2
  displayName: 'Crée le Groupe de Ressource pour le KeyVault'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az group create --name $(resourceGroupName) --location $(location)

- task: AzureCLI@2
  displayName: 'Déployer le KeyVault'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az keyvault create --name $(keyVaultName) --resource-group $(resourceGroupName) --location $(location) --enable-rbac-authorization

- task: AzureCLI@2
  displayName: 'Ajouter un secret dans le KeyVault'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $password = -join ((1..16) | ForEach-Object { (65..90) + (97..122) + (48..57) | Get-Random | % {[char]$_} })
      # Ajoute le mot de passe si les permissions sont correctement configurées
      az keyvault secret set --vault-name $(keyVaultName) --name $(secretName) --value $password


- task: AzureCLI@2
  displayName: 'Vérifier le mot de passe dans le KeyVault'
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az keyvault secret show --vault-name $(keyVaultName) --name $(secretName)
